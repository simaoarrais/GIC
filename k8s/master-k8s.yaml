# --------------------- NAMESPACE  -------------------
apiVersion: v1
kind: Namespace
metadata:
  name: recurso-gic-85132
#----------------- MONGODB - SERVICE -----------------
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: recurso-gic-85132
  labels:
    app: mongodb
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
# ----------------MONGODB - STATEFULSET --------------
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb-statefulset
  namespace: recurso-gic-85132
spec:
  serviceName: mongodb-svc
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
        selector: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:latest
        resources:
            requests:
              memory: "96Mi"
              cpu: "125m"
            limits:
              memory: "256Mi"
              cpu: "250m"
        ports:
        - containerPort: 27017
          name: web
  #       volumeMounts:
  #         - name: pvc
  #           mountPath: /data/db
  # volumeClaimTemplates:
  # - metadata:
  #     name: pvc
  #     namespace: gic-group-6
  #   spec:
  #     accessModes: 
  #       - ReadWriteOnce
  #     resources:
  #       requests:
  #         storage: 1Gi
---
# ------------------- API - SERVICE -------------------
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: recurso-gic-85132
  labels:
    app: api
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
---
# ------------------ API - DEPLOYMENT ------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: recurso-gic-85132
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: api
          image: simaoarrais/gic_api:latest
          env:
            - name: MONGODB_ADDRESS
              value: "mongodb-service"
          resources:
            requests:
              memory: "96Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 5000
---
# ------------------ CLIENT - SERVICE ------------------
apiVersion: v1
kind: Service
metadata:
  name: client-service
  namespace: recurso-gic-85132
  labels:
    app: client
spec:
  selector:
    app: client
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer
---
# ----------------- CLIENT - DEPLOYMENT -----------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
  namespace: recurso-gic-85132
  labels:
    app: client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: client
  template:
    metadata:
      labels:
        app: client
    spec:
      containers:
        - name: client
          image: simaoarrais/gic_client:latest
          env:
            - name: REACT_APP_API_ADDRESS
              value: "api.fblog.k3s"
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "750Mi"
              cpu: "1000m"
          ports:
            - containerPort: 3000
---
# --------------- MONGODB - AUTOSCALING --------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mongodb-autoscaler
  namespace: recurso-gic-85132
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: mongodb-statefulset
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
# ----------------- API - AUTOSCALING ----------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-autoscaler
  namespace: recurso-gic-85132
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-deployment
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 400
---
# --------------- CLIENT - AUTOSCALING --------------
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: client-autoscaling
  namespace: recurso-gic-85132
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: client-deployment
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 65
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
---
# ---------------- TRAEFIK - INGRESS ---------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gic-ingress
  namespace: recurso-gic-85132
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
    - host: www.fblog.k3s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: client-service
                port:
                  number: 3000
    - host: api.fblog.k3s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: api-service
                port:
                  number: 5000